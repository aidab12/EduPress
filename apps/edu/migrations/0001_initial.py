# Generated by Django 5.2.7 on 2025-10-18 19:01

import apps.edu.models.base
import apps.edu.models.courses
import django.core.validators
import django.db.models.deletion
import django_ckeditor_5.fields
import location_field.models.plain
import uuid
import video_encoding.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('user', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AboutCompany',
            fields=[
                ('id', models.UUIDField(db_default=apps.edu.models.base.GenRandomUUID(), default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('text', django_ckeditor_5.fields.CKEditor5Field()),
                ('email', models.EmailField(max_length=254)),
                ('phone1', models.CharField(max_length=50)),
                ('phone2', models.CharField(blank=True, max_length=50, null=True)),
                ('address', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=255)),
                ('location', location_field.models.plain.PlainLocationField(max_length=63)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BlogCategory',
            fields=[
                ('id', models.UUIDField(db_default=apps.edu.models.base.GenRandomUUID(), default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('slug', models.SlugField(editable=False, unique=True)),
                ('name', models.CharField(max_length=155)),
            ],
            options={
                'verbose_name': 'Категория Блога',
                'verbose_name_plural': 'Категории Блога',
            },
        ),
        migrations.CreateModel(
            name='CompanyFAQ',
            fields=[
                ('id', models.UUIDField(db_default=apps.edu.models.base.GenRandomUUID(), default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('question', models.CharField(help_text='Введите вопрос', max_length=255, verbose_name='Question')),
                ('answer', models.TextField(help_text='Введите ответ на вопрос', verbose_name='Answer')),
                ('order', models.PositiveIntegerField(default=0, help_text='Порядок отображения в списке FAQ', verbose_name='Display order')),
            ],
            options={
                'verbose_name': 'FAQ',
                'verbose_name_plural': 'FAQs',
                'ordering': ['order', 'id'],
            },
        ),
        migrations.CreateModel(
            name='CourseCategory',
            fields=[
                ('id', models.UUIDField(db_default=apps.edu.models.base.GenRandomUUID(), default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('slug', models.SlugField(editable=False, unique=True)),
                ('name', models.CharField(max_length=155)),
                ('total_course_count', models.PositiveIntegerField(db_default=0)),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Instructor',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('skills', models.CharField(max_length=255)),
                ('photo', models.ImageField(upload_to='instructor/%Y/%m/%d')),
                ('bio', models.TextField()),
            ],
            options={
                'abstract': False,
            },
            bases=('user.user',),
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.UUIDField(db_default=apps.edu.models.base.GenRandomUUID(), default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=15, unique=True)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Lecture',
            fields=[
                ('id', models.UUIDField(db_default=apps.edu.models.base.GenRandomUUID(), default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('title', models.CharField(max_length=155, verbose_name='Название урока')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.UUIDField(db_default=apps.edu.models.base.GenRandomUUID(), default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.UUIDField(db_default=apps.edu.models.base.GenRandomUUID(), default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('title', models.CharField(max_length=255)),
                ('image', models.ImageField(upload_to='blogs/%Y/%m/%d')),
                ('description', django_ckeditor_5.fields.CKEditor5Field()),
                ('archived', models.BooleanField(db_default=False)),
                ('created_by', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='blogs', to='edu.blogcategory')),
            ],
            options={
                'verbose_name': 'Болг',
                'verbose_name_plural': 'Блоги',
            },
        ),
        migrations.CreateModel(
            name='CompanySocialLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform', models.CharField(choices=[('facebook', 'Facebook'), ('instagram', 'Instagram'), ('youtube', 'YouTube'), ('pinterest', 'Pinterest'), ('x', 'X')], max_length=20)),
                ('url', models.URLField(max_length=255)),
                ('about_company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='social_links', to='edu.aboutcompany')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.UUIDField(db_default=apps.edu.models.base.GenRandomUUID(), default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('slug', models.SlugField(editable=False, unique=True)),
                ('title', models.CharField(max_length=255, unique=True, verbose_name='Заголовок курса')),
                ('overview', models.CharField(max_length=500, verbose_name='Подзаголовок курса')),
                ('description', django_ckeditor_5.fields.CKEditor5Field(verbose_name='Описание курса')),
                ('preview_img', models.ImageField(blank=True, null=True, upload_to=apps.edu.models.courses.course_upload_path, verbose_name='Изображение курса')),
                ('preview_video', models.FileField(blank=True, null=True, upload_to=apps.edu.models.courses.course_upload_path, verbose_name='Рекламное видео')),
                ('duration', models.DecimalField(blank=True, decimal_places=1, help_text='Продолжительность в часах', max_digits=3, null=True, verbose_name='Продолжительность')),
                ('level', models.CharField(choices=[('beginner', 'Начальный'), ('intermediate', 'Средний'), ('professional', 'Профессиональный'), ('all_levels', 'Все уровни')], default='beginner', max_length=25)),
                ('what_you_will_learn', models.JSONField(default=list, verbose_name='Чему вы научитесь')),
                ('is_free', models.BooleanField(default=False)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_published', models.BooleanField(default=False, verbose_name='Опубликован')),
                ('students', models.ManyToManyField(limit_choices_to={'type': 'student'}, related_name='enrolled_courses', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='course', to='edu.coursecategory')),
                ('authors', models.ManyToManyField(related_name='authored_courses', to='edu.instructor', verbose_name='Владелецы курса')),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='course', to='edu.language')),
                ('subtitles', models.ManyToManyField(related_name='courses_subtitles', to='edu.language')),
                ('topics', models.ManyToManyField(blank=True, help_text='Обзор связанных тем', related_name='courses', to='edu.topic')),
            ],
            options={
                'verbose_name': 'Курс',
                'verbose_name_plural': '1. Курсы',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CourseComment',
            fields=[
                ('id', models.UUIDField(db_default=apps.edu.models.base.GenRandomUUID(), default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('comment_text', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_comment', to='edu.course')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_comments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CourseRating',
            fields=[
                ('id', models.UUIDField(db_default=apps.edu.models.base.GenRandomUUID(), default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('rating', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(3), django.core.validators.MaxValueValidator(4.5)])),
                ('reviews', models.TextField(blank=True, null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rating', to='edu.course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rating', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CourseTest',
            fields=[
                ('id', models.UUIDField(db_default=apps.edu.models.base.GenRandomUUID(), default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('test_name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('total_ball', models.PositiveSmallIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(100)])),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quizzes', to='edu.course')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CourseResult',
            fields=[
                ('id', models.UUIDField(db_default=apps.edu.models.base.GenRandomUUID(), default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('score', models.PositiveSmallIntegerField(default=0)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='edu.course')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_result', to=settings.AUTH_USER_MODEL)),
                ('test_result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='edu.coursetest')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('id', models.UUIDField(db_default=apps.edu.models.base.GenRandomUUID(), default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completion_status', models.CharField(choices=[('enrolled', 'Зачислен'), ('in_progress', 'Проходит'), ('completed', 'Завершил'), ('cancelled', 'Отменено')], default='enrolled', max_length=20)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='edu.course')),
                ('student', models.ForeignKey(limit_choices_to={'type': 'student'}, on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LectureContent',
            fields=[
                ('id', models.UUIDField(db_default=apps.edu.models.base.GenRandomUUID(), default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('title', models.CharField(max_length=155)),
                ('duration', models.FloatField(editable=False, null=True)),
                ('video', video_encoding.fields.VideoField(upload_to=apps.edu.models.courses.course_upload_path, verbose_name='Видео к урок')),
                ('file', models.FileField(upload_to=apps.edu.models.courses.course_upload_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['.jpg', 'jpeg', 'png', '.pdf', '.docx'])], verbose_name='Файл к уроку')),
                ('lecture', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lecture_contents', to='edu.lecture')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.UUIDField(db_default=apps.edu.models.base.GenRandomUUID(), default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('order_number', models.PositiveSmallIntegerField(default=1)),
                ('title', models.CharField(max_length=155)),
                ('lectures_count', models.PositiveSmallIntegerField(blank=True, editable=False, null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='edu.course')),
            ],
            options={
                'verbose_name': 'Учебный план (Секция)',
                'verbose_name_plural': '2. Учебный план (Секции)',
            },
        ),
        migrations.AddField(
            model_name='lecture',
            name='section',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lectures', to='edu.section', verbose_name='Урок'),
        ),
    ]
