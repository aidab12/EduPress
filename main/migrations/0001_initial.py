# Generated by Django 5.2.7 on 2025-10-14 02:05

import django.core.validators
import django.db.models.deletion
import django_ckeditor_5.fields
import location_field.models.plain
import main.models.base
import main.models.courses
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AboutCompany',
            fields=[
                ('id', models.UUIDField(db_default=main.models.base.GenRandomUUID(), editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('text', django_ckeditor_5.fields.CKEditor5Field()),
                ('email', models.EmailField(max_length=254)),
                ('phone1', models.CharField(max_length=50)),
                ('phone2', models.CharField(blank=True, max_length=50, null=True)),
                ('address', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=255)),
                ('location', location_field.models.plain.PlainLocationField(max_length=63)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CompanyFAQ',
            fields=[
                ('id', models.UUIDField(db_default=main.models.base.GenRandomUUID(), editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('question', models.CharField(help_text='Введите вопрос', max_length=255, verbose_name='Question')),
                ('answer', models.TextField(help_text='Введите ответ на вопрос', verbose_name='Answer')),
                ('order', models.PositiveIntegerField(default=0, help_text='Порядок отображения в списке FAQ', verbose_name='Display order')),
            ],
            options={
                'verbose_name': 'FAQ',
                'verbose_name_plural': 'FAQs',
                'ordering': ['order', 'id'],
            },
        ),
        migrations.CreateModel(
            name='CourseCategory',
            fields=[
                ('id', models.UUIDField(db_default=main.models.base.GenRandomUUID(), editable=False, primary_key=True, serialize=False)),
                ('slug', models.SlugField(editable=False, unique=True)),
                ('name', models.CharField(max_length=155)),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CourseProgress',
            fields=[
                ('id', models.UUIDField(db_default=main.models.base.GenRandomUUID(), editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Instructor',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('skills', models.CharField(max_length=255)),
                ('photo', models.ImageField(upload_to='instructor/%Y/%m/%d')),
                ('bio', models.TextField()),
            ],
            options={
                'abstract': False,
            },
            bases=('users.user',),
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.UUIDField(db_default=main.models.base.GenRandomUUID(), editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=15, unique=True)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.UUIDField(db_default=main.models.base.GenRandomUUID(), editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CompanySocialLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform', models.CharField(choices=[('facebook', 'Facebook'), ('instagram', 'Instagram'), ('youtube', 'YouTube'), ('pinterest', 'Pinterest'), ('x', 'X')], max_length=20)),
                ('url', models.URLField(max_length=255)),
                ('about_company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='social_links', to='main.aboutcompany')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.UUIDField(db_default=main.models.base.GenRandomUUID(), editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('slug', models.SlugField(editable=False, unique=True)),
                ('title', models.CharField(max_length=255, unique=True, verbose_name='Название курса')),
                ('description', django_ckeditor_5.fields.CKEditor5Field(verbose_name='Описание курса')),
                ('overview', models.CharField(max_length=500, verbose_name='Краткое описание')),
                ('preview_img', models.ImageField(upload_to=main.models.courses.course_upload_path, verbose_name='Эскиз')),
                ('preview_video', models.FileField(blank=True, null=True, upload_to=main.models.courses.course_upload_path, verbose_name='Превью видео')),
                ('duration', models.DecimalField(decimal_places=1, help_text='Продолжительность в часах', max_digits=3, verbose_name='Продолжительность')),
                ('level', models.CharField(choices=[('beginner', 'Начальный'), ('intermediate', 'Средний'), ('professional', 'Профессиональный')], default='beginner', max_length=25)),
                ('what_you_will_learn', models.JSONField(default=list, verbose_name='Чему вы научитесь')),
                ('is_free', models.BooleanField(default=False)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_published', models.BooleanField(default=False, verbose_name='Опубликован')),
                ('is_featured', models.BooleanField(blank=True, editable=False, null=True, verbose_name='Рекомендованный')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='course', to='main.coursecategory')),
                ('authors', models.ManyToManyField(related_name='author_course', to='main.instructor', verbose_name='Владелец курса')),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='course', to='main.language')),
                ('subtitles', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='course_sub', to='main.language')),
                ('topics', models.ManyToManyField(help_text='Обзор связанных тем', related_name='courses', to='main.topic')),
            ],
            options={
                'verbose_name': 'Курс',
                'verbose_name_plural': 'Курсы',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CourseModul',
            fields=[
                ('id', models.UUIDField(db_default=main.models.base.GenRandomUUID(), editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('order', models.PositiveSmallIntegerField(default=1)),
                ('title', models.CharField(max_length=155)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_moduls', to='main.course')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CourseRating',
            fields=[
                ('id', models.UUIDField(db_default=main.models.base.GenRandomUUID(), editable=False, primary_key=True, serialize=False)),
                ('rating', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(3), django.core.validators.MaxValueValidator(4.5)])),
                ('reviews', models.TextField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rating', to='main.course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rating', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CourseTest',
            fields=[
                ('id', models.UUIDField(db_default=main.models.base.GenRandomUUID(), editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('test_name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('total_ball', models.PositiveSmallIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(100)])),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quizzes', to='main.course')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CourseResult',
            fields=[
                ('id', models.UUIDField(db_default=main.models.base.GenRandomUUID(), editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('score', models.PositiveSmallIntegerField(default=0)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.course')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_result', to=settings.AUTH_USER_MODEL)),
                ('test_result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='main.coursetest')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('id', models.UUIDField(db_default=main.models.base.GenRandomUUID(), editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('enrollment_date', models.DateTimeField(auto_now_add=True)),
                ('completion_status', models.CharField(choices=[('enrolled', 'Зачислен'), ('in_progress', 'Проходит'), ('completed', 'Завершил'), ('cancelled', 'Отменено')], default='enrolled', max_length=20)),
                ('enrolled_time', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='main.course')),
                ('student', models.ForeignKey(limit_choices_to={'type': 'student'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.UUIDField(db_default=main.models.base.GenRandomUUID(), editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('lessons_count', models.PositiveSmallIntegerField(default=1)),
                ('title', models.CharField(max_length=155, verbose_name='Название курса')),
                ('description', django_ckeditor_5.fields.CKEditor5Field(verbose_name='Описание урока')),
                ('preview', models.ImageField(blank=True, null=True, upload_to=main.models.courses.lesson_upload_path, verbose_name='Превью урока')),
                ('video_link', models.URLField(blank=True, null=True, verbose_name='Ссылка на видео')),
                ('lesson_author', models.FileField(upload_to=main.models.courses.lesson_upload_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['.jpg', 'jpeg', 'png', '.pdf', '.mp4', '.mov', '.avi'])])),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course', to='main.course', verbose_name='Курс')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LessonComment',
            fields=[
                ('id', models.UUIDField(db_default=main.models.base.GenRandomUUID(), editable=False, primary_key=True, serialize=False)),
                ('comment_text', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lesson_comment', to='main.lesson')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lesson_comments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LessonContent',
            fields=[
                ('id', models.UUIDField(db_default=main.models.base.GenRandomUUID(), editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('video_url', models.URLField(max_length=255)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='lesson_contents', to='main.instructor')),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lesson_contents', to='main.lesson')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StudentFavoriteCourse',
            fields=[
                ('id', models.UUIDField(db_default=main.models.base.GenRandomUUID(), editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.BooleanField(default=False)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Избранные курсы студента',
            },
        ),
    ]
